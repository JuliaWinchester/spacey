{"version":3,"sources":["SessionDescriptions.js","App.js","serviceWorker.js","index.js"],"names":["SessionDescriptions","props","session","CharacterPortrait","key","name","className","sm","xs","href","onClick","src","img","alt","shuffleArray","array","array2","slice","i","length","j","Math","floor","random","temp","CharacterPortraitGrid","grid","characters","map","character","imgpixel","e","CharacterCard","Body","desc","rounded","icon","faTimes","size","Session","noGutters","number","SessionsList","sessions","SessionsPane","state","current","this","setState","title","handleClick","handleReturnClick","React","Component","App","currentCharacter","data","coverImg","subtitleImg","subtitle","copy","characterListTitle","sessionsListTitle","shipTitle","graveyardTitle","graveyard","author","authorEmail","testVar","preventDefault","dangerouslySetInnerHTML","__html","id","handleCardCloseClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54c7e6bb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SessionDescriptions(props) {\n  if (props.session === 1) {\n    return (\n      <div> \n        <p><i>\"... difficult to see. Always in motion is the future ...\"</i></p>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default SessionDescriptions;","import React from 'react';\nimport SessionDescriptions from './SessionDescriptions.js';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Media from 'react-bootstrap/Media';\nimport Row from 'react-bootstrap/Row';\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport data from './data.json';\nimport './App.css';\n\nfunction CharacterPortrait(props) {\n  return (\n    <Col key={props.name} className=\"character-portrait-container\" sm={4} xs={6}>\n      <a href=\"#card\" onClick={props.onClick}>\n        <Image src={props.img} className=\"character-portrait img-shadow\" alt={props.name} />\n      </a>\n      <a href=\"#card\" onClick={props.onClick} className=\"character-portrait-name text-info\">{props.name}</a>\n    </Col>\n  );\n}\n\nfunction shuffleArray(array) {\n  const array2 = array.slice();\n  let i = array2.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array2[i];\n    array2[i] = array2[j];\n    array2[j] = temp;\n  }\n  return array2;\n}\n\nfunction CharacterPortraitGrid(props) {\n  let grid = props.characters.map((character, i) => {\n    return (\n      <CharacterPortrait key={character.name}\n        name={character.name}\n        img={character.imgpixel}\n        onClick={(e) => props.onClick(i, e)}\n      />\n    );\n  });\n\n  if (props.characters.length) {\n    return (\n      <Row className=\"justify-content-center character-portrait-grid\">\n        {grid}\n      </Row>\n    );\n  } else {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <p><i>“Somebody has to save our skins! Into the garbage chute, flyboy.”</i></p>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <p>No characters yet.</p>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction CharacterCard(props) {\n  if (!props.character) {\n    return null;\n  }\n\n  return (\n    <Row className=\"justify-content-center media-container\">\n      <Col xs={11}>\n      <Media className=\"\">\n            <Media.Body className=\"align-self-center\">\n              <h5>{props.character.name}</h5>\n              <p>{props.character.desc}</p>\n            </Media.Body>\n            <Image\n              className=\"align-self-center media-image\"\n              src={props.character.img}\n              alt={props.character.name}\n              rounded\n            />\n      </Media>\n      </Col>\n      <Col xs={0.5} className=\"icon-container\">\n      <FontAwesomeIcon icon={faTimes} size=\"lg\" onClick={props.onClick} />\n      </Col>\n    </Row>\n  );\n}\n\nfunction Session(props) {\n  return (\n    <div className=\"session\">\n      <Row className=\"justify-content-center\">\n        <h4>\n          {props.session.name}\n        </h4>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <a className=\"return-link\" href=\"#session\" onClick={props.onClick}>Return To List of Sessions</a>\n      </Row>\n      <Row className=\"justify-content-center\" noGutters>\n        <SessionDescriptions session={props.session.number} />\n      </Row>\n    </div>\n  );\n}\n\nfunction SessionsList(props) {\n  let sessions = props.sessions.map((session, i) => {\n    return (\n      <Row key={i} className='justify-content-center'>\n        <a className=\"text-info\" href=\"#session\" onClick={(e) => props.onClick(i, e)}>{session.name}</a>\n      </Row>\n    );\n  });\n\n  return (\n    <div>\n      {sessions}\n    </div>\n  );\n}\n\nclass SessionsPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: null,\n    }\n  }\n\n  handleClick(i, e) {\n    // e.preventDefault();\n    this.setState({\n      current: i,\n    });\n  }\n\n  handleReturnClick(e) {\n    // e.preventDefault();\n    this.setState({\n      current: null,\n    });\n  }\n\n  render() {\n    if (this.state.current === null) {\n      return(\n        <div>\n          <Row className=\"justify-content-center\">\n            <h4>\n              {this.props.title}\n            </h4>\n          </Row>\n          <SessionsList \n            sessions={this.props.sessions}\n            onClick={(i, e) => this.handleClick(i, e)} \n          />\n        </div>\n      );  \n    } else {\n      return (\n        <div>\n          <Session session={this.props.sessions[this.state.current]} onClick={(e) => this.handleReturnClick(e)}  />\n        </div>\n      );\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCharacter: null,\n      characters: shuffleArray(data.characters),\n      sessions: data.sessions,\n      coverImg: data.coverImg,\n      subtitleImg: data.subtitleImg,\n      title: data.title,\n      subtitle: data.subtitle,\n      copy: data.copy,\n      characterListTitle: data.characterListTitle,\n      sessionsListTitle: data.sessionsListTitle,\n      shipTitle: data.shipTitle,\n      graveyardTitle: data.graveyardTitle,\n      graveyard: data.graveyard,\n      author: data.author,\n      authorEmail: data.authorEmail,\n      testVar: \"\",\n    }\n  }\n\n  handleClick(i, e) {\n    this.setState({\n      currentCharacter: this.state.characters[i],\n    });\n  }\n\n  handleCardCloseClick(e) {\n    e.preventDefault();\n    this.setState({\n      currentCharacter: null,\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <img src={this.state.coverImg} className=\"App-logo\" alt=\"Star Wars Edge of the Empire: No Such Thing As Luck\" />\n        <img src={this.state.subtitleImg} className=\"App-logo\" alt=\"Two scoundrels blasting stormtroopers in a landspeeder\" />\n        <Row className=\"justify-content-center top-spacing-6\" noGutters>\n          <p dangerouslySetInnerHTML={{__html: this.state.copy}} />\n        </Row>\n        <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n\n        <Row className=\"justify-content-center\">\n          <h4>\n            {this.state.characterListTitle}\n          </h4>\n        </Row>\n        <CharacterPortraitGrid \n          characters={this.state.characters} \n          onClick={(i, e) => this.handleClick(i, e)}\n        />\n        <ScrollableAnchor id={'card'}>\n          <Row className=\"justify-content-center top-spacing bottom-spacing\">\n            <CharacterCard \n              character={this.state.currentCharacter} \n              onClick={(e) => this.handleCardCloseClick(e)} \n            />\n          </Row>\n        </ScrollableAnchor>\n\n        <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n        \n        <Row className=\"justify-content-center\">\n          <h4>\n            {this.state.shipTitle}\n          </h4>\n        </Row>\n\n        <Row className=\"justify-content-center\">\n          <p><i>“She may not look like much, but she's got it where it counts, kid.”</i></p>\n        </Row>\n\n        <Row className=\"justify-content-center\">\n          <p>No ship yet.</p>\n        </Row>\n\n        <ScrollableAnchor id={'session'}>\n          <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n        </ScrollableAnchor>\n\n        <SessionsPane sessions={this.state.sessions} title={this.state.sessionsListTitle} />\n\n        <Row className=\"justify-content-center bottom-divider\" noGutters></Row>\n        <Row className=\"footer justify-content-center\">\n          <Col>\n            <span>\n              {this.state.author}\n            </span>\n          </Col>\n          <Col>\n            <span>\n              {this.state.authorEmail}\n            </span>\n          </Col>\n        </Row>  \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}